#!/bin/sh
DEBUG=1
PATH=/bin:/usr/bin:/usr/local/bin

[[ -n "$DEBUG" ]] && \
{
    logger -t sshgw -p authpriv.debug "SSH_CONNECTION: ${SSH_CONNECTION}"
    logger -t sshgw -p authpriv.debug "SSH_ORIGINAL_COMMAND: 
${SSH_ORIGINAL_COMMAND}"
}

SSHGW_USER="$1"
SERVER="${SSH_ORIGINAL_COMMAND}"
DB="/home/_sshgw/sshgw.db"
[[ -n "$DEBUG" ]] && DB=./sshgw.db

access_ok()
{
    local user="$1"
    local server="${2%%.}"

    # check if we have been called with the right amount of arguments
    [[ -z "$user" || -z "$server" ]] &&
    {
        echo "access_ok(): wrong list of arguments" >&2
        exit 1
    }

    # query the database
    [[ X"$(query_DB $user $server)" = 'X' ]] && return 1
    return 0
}

query_DB()
{
    local user="$1"
    local server="$2"
    sqlite3 2>/dev/null $DB <<EOF
SELECT DISTINCT(a.user) FROM access a, hosts h WHERE
  (a.user="$user" AND a.groupname='*') OR
  (a.user="$user" AND a.groupname=h.memberof AND h.fqdn="$server") OR
  (a.user="$user" AND a.hostname="$server")
/
EOF
}

# sanity checks for SSHGW_USER and SERVER and DB
if [[ X"${SSHGW_USER}" != X${SSHGW_USER} ]]; then
    logger -t sshgw -p authpriv.warn "bad user: ${SSHGW_USER}"
    exit 1
elif [[ X"${SERVER}" != X${SERVER} ]]; then
    logger -t sshgw -p authpriv.warn "bad servername: ${SERVER}"
    exit 1
fi

[[ -r "${DB}" ]] || \
{
    echo "$DB: no such database" >&2
    exit 1
}

{
    host "${SERVER}" >/dev/null 2>&1 || \
	getent hosts "${SERVER}" > /dev/null
} || \
{
    echo "${SERVER}: host unknown"; >&2
    exit 1
}

if access_ok "$SSHGW_USER" "$SERVER"; then
    # log this and connect to server
    logger -t sshgw -p authpriv.info "START connection for $SSHGW_USER to 
$SERVER"
    echo "socat -T 86400 - TCP4:$SERVER:22"
    logger -t sshgw -p authpriv.info "END connection for $SSHGW_USER to 
$SERVER"
else
    # log and disconnect
    logger -t sshgw -p authpriv.warning "DENIED connection for $SSHGW_USER 
to $SERVER"
    echo "access denied" >&2
    exit 1
fi
exit 0
#EOF
